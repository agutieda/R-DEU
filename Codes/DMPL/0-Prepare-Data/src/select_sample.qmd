---
title: "Random Discounted Expected Utility"
subtitle: "Empirical analysis using Double-Multiple Price Lists"
author: "Jose Apesteguia, Miguel. A. Ballester, and Angelo Gutierrez-Daza"
published-title: "Last Modified"
date: "October 2023"
abstract-title: "Description"
abstract: "Select sample used in the empirical analysis."
format:
    html:
        toc: true
        code-fold: true
        code-summary: "Show Code"
        number-sections: true
        html-math-method: katex
        embed-resources: true
        theme: simplex # favs: lux, flatly, darkly, simplex, slate
---

```{r}
#| echo: false 
#| include: false

knitr::opts_chunk$set(echo = TRUE, strip.white = TRUE)
rm(list = ls())
library(dplyr)
library(readr)
library(magrittr)

```

# Sample Selection: Risk Aversion Tasks

We use data of the risk aversion tasks in AHLR:

-   253 subjects, each of which faces 4 tasks

-   In each task, the subject must choose between a safe lottery L1 and a risky
    lottery L2

The raw dataset is available in the intermediate sub-folder after being imported
from the original replication files.

```{r}
#| message: false 

rawObsTab  <- read_csv("../temp/rawObsTab.csv")
menuTab <- read_csv("../temp/rawMenuTab.csv")

```

We now match lotteries to observed choices:

```{r}

# Match choices with menu characteristics
obsTab_matched <- left_join(rawObsTab, menuTab, by = "menuID") 

# Choose only risk tasks
riskTab_raw <- obsTab_matched %>% 
    filter(taskType == "Risk") %>% 
    select(subjectID, menuID, taskID, 
           x1_L1, x2_L1, x1_L2, x2_L2, p_L1, p_L2, Y)

```

To keep the analysis transparent, we select a sub-sample of observations
satisfying the following criteria:

1.  Subjects that did not report indifference in all menus, in the four tasks

2.  Menus with non-dominated lotteries

3.  Subjects that switched in at least one task

That is, we drop subjects that respond with indifference to all menus in at
least one task, subjects that never switch in any task, and observations
corresponding to menus where there is clearly a dominated alternative. These
observations cannot be used to point-identify the distribution of risk aversion
of each subject under Expected Utility and CRRA preferences, so we drop them
from the sample. This makes all individuals comparable as all of them have
completed exactly 4 tasks and have switched in at least one task.

## 1. Dropping incomplete respondents

Let's count how many individuals will be dropped by this criterion:

```{r}

riskTab_raw %>% 
    group_by(subjectID, taskID) %>% 
    filter( all(Y == 0) ) %>% 
    pull(subjectID) %>% 
    n_distinct() %>% 
    print()

```

Seven individuals responded indifference in all menus in at least one task.
Let's find their ID:

```{r}

dropID <- riskTab_raw %>% 
    group_by(subjectID, taskID) %>% 
    filter( all(Y == 0) ) %>% 
    pull(subjectID) %>%
    unique() %>% 
    print()

```

Now drop them from the sample:

```{r}

# Drop incomplete respondents
riskTab <- riskTab_raw %>% filter(!(subjectID %in% dropID))
# Count number of subjects before and after
riskTab_raw %>% pull(subjectID) %>% n_distinct() %>% print()
riskTab %>% pull(subjectID) %>% n_distinct() %>% print()
# Count number of observations before and after
riskTab_raw %>% nrow() %>% print()
riskTab %>% nrow() %>% print()

```

We are left with **246** **subjects** in the sample. And a total of **7728
observations**.

## 2. Dropping menus with dominated alternatives

The last menu of each task contains a dominated lottery. Let's see how many
times the dominated alternative was chosen in the sample.

```{r}

riskTab_raw %>% filter(Y == 1, menuID %in% c(10,20,30,40) ) %>% knitr::kable()

```

A total of **39** observations report a choice of a dominated lottery. These
come from **24** subjects.

Expected Utility rules with CRRA predicts the non-dominated lottery will be
chosen always, regardless of the risk-aversion level of the subject. It follows
that the choice in these menus do not provide any information to elicit the risk
aversion level of the subject in subsequent exercises, so we drop these from the
sample.

```{r}

riskTab %<>% filter(!(menuID %in% c(10,20,30,40)))
nrow(riskTab)
subjectsInRiskTab <- unique(riskTab$subjectID) 
print(length(subjectsInRiskTab))

```

We are left with **6744 observations** for **246 subjects**.

## 3. Drop subjects who never switch in risk tasks

Some individuals always chose "safe" in all the risk tasks. Others always chose
"risky" in all the risk tasks. Finally, some never switched: They chose "risky"
in all the menus of some risk tasks, and "safe" in the remaining menus.

Let us identify those subjects.

```{r}

# Subject list
subjectList <- unique(riskTab$subjectID)

# Iterate across subjects
subjectChoiceTab_R <- tibble(
    subjectID = numeric(),
    nAllRisky = numeric(),
    nAllSafe  = numeric(),
    nNoSwitch = numeric(),
    nSwitches = numeric()
)

for (subject in subjectList) {
    # Create tab for this subject
    subjectTab <- riskTab %>% filter(subjectID == subject)
    taskList <- unique(subjectTab$taskID)

    # Iterate across tasks sets
    nAllRisky_i <- 0
    nAllSafe_i <- 0
    nSwitches_i <- 0
    for (task in taskList) {
        # Choose menus in this task
        taskTab <- subjectTab %>% filter(taskID == task)

        # Drop observations where indifference is reported
        taskTab %<>% filter(Y != 0)

        # Check if all choices are risky or safe
        if (all(taskTab$Y == 1)) {
            nAllSafe_i <- nAllSafe_i + 1
        }

        if (all(taskTab$Y == 2)) {
            nAllRisky_i <- nAllRisky_i + 1
        }
         
        # Find position of switching points
        taskTab %<>% mutate(diffY = Y - lag(Y))
        idxSwitch <- which(taskTab$diffY == 1)
        
        # Count number of times switched
        nSwitches_i <- nSwitches_i + length(idxSwitch)

    }

    subjectChoiceTab_R %<>%
        add_row(
            subjectID = subject,
            nAllRisky = nAllRisky_i,
            nAllSafe  = nAllSafe_i,
            nNoSwitch = nAllRisky_i + nAllSafe_i,
            nSwitches = nSwitches_i
        )
}
```

Lets check them:

```{r}

dropList_R <- subjectChoiceTab_R %>% filter(nNoSwitch == 4)

knitr::kable(dropList_R)

```

A total of 24 subjects do not switch in all tasks:

1.  20 subjects choose the safe alternative in all menus of all tasks.

2.  2 subjects choose the risky alternative in all menus of all tasks.

3.  1 subject chose the safe alternative in all menus of three tasks, and the
    risky alternative in all menus of the fourth task.

4.  1 subject chose the safe alternative in all menus of two tasks, and the
    risky alternative in all menus of the remaining two tasks.

All these subjects will be dropped from the final sample.

```{r}

dropID_R <- dropList_R$subjectID

riskTab <- riskTab %>%  filter(!(subjectID %in% dropID_R))

```


Check observations left

```{r}

print(nrow(riskTab))
subjectsInRiskTab <- unique(riskTab$subjectID) 
print(length(subjectsInRiskTab))

```

We are left with **6560 observations** for **240 subjects**.

# Sample Selection: Time Tasks

We use data of the delay tasks in AHLR:

-   253 subjects, each of which faces 6 tasks

-   In each task, the subject must choose between a early certain payoff L1 and
    a delayed certain payoff L2

The raw dataset is available in the intermediate sub-folder after being imported
from the original replication files.

```{r}

timeTab_raw <- obsTab_matched %>% 
    filter(taskType == "Time") %>% 
    select(subjectID, menuID, taskID, x1_L1, x1_L2, t_L1, t_L2, Y)

timeTab_raw %>% 
    pull(subjectID) %>% 
    n_distinct() %>% 
    print()
```

To keep the analysis transparent, we select a sub-sample of individuals that
completed the six tasks without reporting always indifference, and
switched in at least one task. 

## 1. Drop subjects who always respond indifference

Let's count how many individuals will be dropped by this criterion.

```{r}

timeTab_raw %>% 
    group_by(subjectID, taskID) %>% 
    filter(all(Y == 0)) %>% 
    pull(subjectID) %>% 
    n_distinct()

```

Ten individuals responded indifference in all menus in at least one task. Let's
find their ID:

```{r}

dropID <- timeTab_raw %>% 
    group_by(subjectID, taskID) %>% 
    filter( all(Y == 0) ) %>% 
    pull(subjectID) %>%
    unique() 
print(dropID)

```

Now drop them from the sample

```{r}

# Drop incomplete respondents
timeTab <- timeTab_raw %>% filter(!(subjectID %in% dropID))
# Count number of subjects before and after
timeTab_raw %>% group_by(subjectID) %>% pull(subjectID) %>% n_distinct()
timeTab %>% group_by(subjectID) %>% pull(subjectID) %>% n_distinct()
# Count number of observations before and after
timeTab_raw %>% nrow()
timeTab %>% nrow()

```

We are left with **243** **subjects** in the sample. And a total of **14580
observations**.

Notice that subjects 101, 147, 149 and 257 were also present as anomalies in the
risk aversion task.

## 2. Drop subjects who never switch in delay tasks

Some individuals always chose "early" in all the time tasks. Others always chose
"late" in all the time tasks. Finally, some never switched: They chose "late" in
all the menus of some time tasks, and "early" in the remaining menus.

Let us identify those subjects.

```{r}

# Subject list
subjectList <- unique(timeTab$subjectID)

# Iterate across subjects
subjectChoiceTab_T <- tibble(
    subjectID = numeric(),
    nAllEarly = numeric(),
    nAllLate  = numeric(),
    nNoSwitch = numeric()
)

for (subject in subjectList) {
    # Create tab for this subject
    subjectTab <- timeTab %>% filter(subjectID == subject)
    taskList <- unique(subjectTab$taskID)

    # Iterate across tasks sets
    nAllEarly_i <- 0
    nAllLate_i <- 0
    for (task in taskList) {
        # Choose menus in this task
        taskTab <- subjectTab %>% filter(taskID == task)

        # Drop observations where indifference is reported
        taskTab %<>% filter(Y != 0)

        # Check if all choices are late or early
        if (all(taskTab$Y == 1)) {
            nAllEarly_i <- nAllEarly_i + 1
        }

        if (all(taskTab$Y == 2)) {
            nAllLate_i <- nAllLate_i + 1
        }
    }


    subjectChoiceTab_T %<>%
        add_row(
            subjectID = subject,
            nAllEarly = nAllEarly_i,
            nAllLate  = nAllLate_i,
            nNoSwitch = nAllEarly_i + nAllLate_i
        )
}

```

Lets check them:

```{r}

dropList_T <- subjectChoiceTab_T %>% filter(nNoSwitch == 6)

knitr::kable(dropList_T)

```

A total of 22 subjects do not switch in all tasks:

1.  5 subjects choose the early payoff in all menus of all tasks.
2.  15 subjects choose the delayed payoff in all menus of all tasks.
3.  1 subject chose the early payoff in all menus of one tasks, and the delayed
    payoff in all menus of the remaining five tasks.
4.  1 subject chose the early payoff in all menus of four tasks, and the delayed
    payoff in all menus of the remaining two tasks.

All these subjects will be dropped from the final sample.

```{r}

dropID_T <- dropList_T$subjectID

timeTab %<>% filter(!(subjectID %in% dropID_T))

```

Notice that seven of these subjects where also among those dropped because they
never switch in risk tasks.

```{r}

neverSwitchers <- intersect(dropID_R, dropID_T)

neverSwitchers

```


# Final Sample

We keep only those subjects present in both tasks

```{r}

subjectsInRiskTab <- unique(riskTab$subjectID)
subjectsInTimeTab <- unique(timeTab$subjectID)
subjectsInBoth <- intersect(subjectsInRiskTab,subjectsInTimeTab)
riskTab_chosen <- riskTab %>% filter(subjectID %in% subjectsInBoth)
timeTab_chosen <- timeTab %>% filter(subjectID %in% subjectsInBoth)

```

Some checks for risk tasks:

```{r}

riskTab %>% pull(subjectID) %>% n_distinct()
riskTab_chosen %>% pull(subjectID) %>% n_distinct()
nrow(riskTab)
nrow(riskTab_chosen)

```

Some checks for delay tasks:

```{r}

timeTab %>% pull(subjectID) %>% n_distinct()
timeTab_chosen %>% pull(subjectID) %>% n_distinct()
nrow(timeTab)
nrow(timeTab_chosen)

```

Now bind both tables and export

```{r}

obsTab_R <- riskTab_chosen %>% 
    select(subjectID, menuID, taskID, Y) %>%
    mutate(taskType = as.factor("Risk"))

obsTab_T <- timeTab_chosen %>% 
    select(subjectID, menuID, taskID, Y) %>%
    mutate(taskType = as.factor("Time"))

obsTab <- rbind(obsTab_R, obsTab_T)

# Count number of observations before and after
rawObsTab %>% nrow()
obsTab %>% nrow()

n_distinct(rawObsTab$subjectID)
n_distinct(obsTab$subjectID)

```

The final sample contains **202 subjects** and **17696 observations**.

# Final sample of observations

The final sample has 202 subjects who made a switch in at least one task.

```{r}

nSubjects <- length(unique(obsTab$subjectID))

nSubjects

```


# Observed frequency of risky/delayed choice in each menu

Fraction of observations where the safe alternative is chosen in each menu of
the risk tasks:

```{r}

p_L1_hat_R <- riskTab %>% 
    select(menuID,Y) %>% 
    group_by(menuID) %>%
    summarize(p_L1_hat = (sum(Y == 1) + 0.5*sum(Y == 0)) / n() ) 

# Add manually the missing menuID of dominated lotteries
p_L1_hat_R <- p_L1_hat_R %>% 
    bind_rows(data.frame(menuID = 10, p_L1_hat = 0))  %>% 
    bind_rows(data.frame(menuID = 20, p_L1_hat = 0))  %>% 
    bind_rows(data.frame(menuID = 30, p_L1_hat = 0))  %>% 
    bind_rows(data.frame(menuID = 40, p_L1_hat = 0))  

knitr::kable(p_L1_hat_R)

```

Fraction of observations where the safe alternative is chosen in each menu of
the delay tasks:

```{r}

p_L1_hat_T <- obsTab_T %>% 
    select(menuID,Y) %>% 
    group_by(menuID) %>%
    summarize(p_L1_hat = (sum(Y == 1) + 0.5*sum(Y == 0)) / n() )

knitr::kable(p_L1_hat_T)

```

Attach them to the menu tab:

```{r}

p_L1_hat <- rbind(p_L1_hat_R,p_L1_hat_T)
menuTab <- left_join(menuTab, p_L1_hat, by = "menuID")

knitr::kable(menuTab)

```

# Export the final dataset

```{r}

write_csv(obsTab, "../output/obsTab.csv")
write_csv(menuTab, "../output/menuTab.csv")

```
